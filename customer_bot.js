// customer_bot.js
require('dotenv').config();
const { Telegraf, Markup, session } = require('telegraf');
const supabase = require('./lib/supabase');

const bot = new Telegraf(process.env.CUSTOMER_BOT_TOKEN);
bot.use(session());

const WEB_APP_URL = process.env.WEBAPP_URL || 'https://wasupsurf.onrender.com';

bot.start(async (ctx) => {
  // 1) –°—Ä–∞–∑—É reply-keyboard –≤–Ω–∏–∑—É ¬´Open Wallet¬ª
  await ctx.reply(
    'üîπ –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É',
    Markup.keyboard([
      [ Markup.button.webApp('üåä –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', WEB_APP_URL) ]
    ], {
      resize_keyboard: true,
      one_time_keyboard: false
    })
  );

  // 2) Inline-keyboard –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
  const { data: products, error } = await supabase
    .from('products')
    .select('id,name')
    .eq('available', true);

  if (error) {
    console.error('Error fetching products:', error);
    return ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤.');
  }

  if (!products.length) {
    return ctx.reply('–°–µ–π—á–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.');
  }

  const inlineButtons = products.map(p =>
    [ Markup.button.callback(p.name, `SHOW_${p.id}`) ]
  );

  await ctx.reply(
    '–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑:',
    Markup.inlineKeyboard(inlineButtons)
  );
});

// ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ...
